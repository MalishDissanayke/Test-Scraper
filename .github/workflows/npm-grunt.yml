name: Scrape Data and Push

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  scrape-and-push-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install Google Chrome
        run: |
          sudo apt update
          sudo apt install -y wget gnupg2
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt update
          sudo apt install -y google-chrome-stable

      - name: Run the scraper and update files with retries
        run: |
          export PUPPETEER_EXECUTABLE_PATH="/usr/bin/google-chrome-stable"
          attempt=0
          max_attempts=3
          success=false
          while [ $attempt -lt $max_attempts ]; do
            echo "Attempt $((attempt+1)) of $max_attempts"
            node scraper.js && success=true && break || echo "Scraper failed, retrying..."
            ((attempt++))
            if [ $attempt -ge $max_attempts ]; then
              echo "Scraper failed after $max_attempts attempts."
              exit 1
            fi
            sleep 10 # Wait before retrying
          done

      - name: Set up Git configuration
        run: |
          git config --global user.name "Wdevtri"
          git config --global user.email "nikithamorningstar@gmail.com"

      - name: Set up GitHub authentication
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/MalishDissanayke/Test-Scraper.git

      - name: Commit and push changes with retries
        run: |
          attempt=0
          max_attempts=3
          success=false
          while [ $attempt -lt $max_attempts ]; do
            echo "Attempt $((attempt+1)) of $max_attempts"
            git add prematch.json live.json || { echo "No files to add"; exit 1; }
            git commit -m "Update scraped data" || echo "No changes to commit"
            git push && success=true && break || { echo "Git push failed, retrying..."; }
            ((attempt++))
            if [ $attempt -ge $max_attempts ]; then
              echo "Git push failed after $max_attempts attempts."
              exit 1
            fi
            sleep 10 # Wait before retrying
          done

